{-
  TASK 2 - Matrix multiplier
  Write the method that multiplies one matrix by another.
  The 1st and 2nd parameter of the function will contain
  a matrix implemented using tuples (eg: [[1,2], [3,4]]).
  Matrices can be of different sizes, ranging from 4x4
  up to 32x32.
  Matrix can be rectangular where matrixA must to be of size n*m & matrixB of size m*p.
  After calculating the result matrix, the function should return final result (as tuple).
-}

() recv_internal() {
}

(int) tlen (tuple t) asm "TLEN";

;; testable
(tuple) matrix_multiplier(tuple matrixA, tuple matrixB) method_id {
  tuple ret = empty_tuple();
  int sizeB = tlen(matrixB);
  int range = tlen(matrixB.at(0));
  int rowNum = -1;
  repeat (tlen(matrixA)) {
    rowNum += 1;
    int colNum = -1;
    tuple row = empty_tuple();
    repeat (range) {
      colNum += 1;
      int deepNum = -1;
      int sum = 0;
      repeat (sizeB) {
        deepNum += 1;
        sum += matrixA.at(rowNum).at(deepNum) * matrixB.at(deepNum).at(colNum);
      }
      row.tpush(sum);
    }
    ret.tpush(row);
  }
  return ret;
}

